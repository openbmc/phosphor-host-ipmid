{
  "comments": [
    {
      "key": {
        "uuid": "716161fe_adfbbf03",
        "filename": "include/ipmid/types.hpp",
        "patchSetId": 3
      },
      "lineNbr": 174,
      "author": {
        "id": 1000099
      },
      "writtenOn": "2019-11-15T01:16:59Z",
      "side": 1,
      "message": "Please explain why you need to use mutable keyword.",
      "range": {
        "startLine": 174,
        "startChar": 4,
        "endLine": 174,
        "endChar": 11
      },
      "revId": "610ed37b883615c23ac3fd2b22a658a5a12bdabc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1ef592dc_f29594c4",
        "filename": "include/ipmid/types.hpp",
        "patchSetId": 3
      },
      "lineNbr": 174,
      "author": {
        "id": 1000500
      },
      "writtenOn": "2019-11-21T19:15:50Z",
      "side": 1,
      "message": "The mutable is needed because cachedService is modified in readingData(const Info\u0026 sensorInfo), where the structure is passed in as a const reference.",
      "parentUuid": "716161fe_adfbbf03",
      "range": {
        "startLine": 174,
        "startChar": 4,
        "endLine": 174,
        "endChar": 11
      },
      "revId": "610ed37b883615c23ac3fd2b22a658a5a12bdabc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0ca606a3_68af3a3c",
        "filename": "include/ipmid/types.hpp",
        "patchSetId": 3
      },
      "lineNbr": 174,
      "author": {
        "id": 1000099
      },
      "writtenOn": "2019-11-22T02:11:15Z",
      "side": 1,
      "message": "Shouldn\u0027t you just pass it into readingData as a reference instead, then?",
      "parentUuid": "1ef592dc_f29594c4",
      "range": {
        "startLine": 174,
        "startChar": 4,
        "endLine": 174,
        "endChar": 11
      },
      "revId": "610ed37b883615c23ac3fd2b22a658a5a12bdabc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9a582b6c_ca5d5fd6",
        "filename": "include/ipmid/types.hpp",
        "patchSetId": 3
      },
      "lineNbr": 174,
      "author": {
        "id": 1000500
      },
      "writtenOn": "2019-11-22T22:51:50Z",
      "side": 1,
      "message": "As far as I know this one is one typical usage of the \"mutable\" keyword (with a cached service name, the object is \"logically\" constant, but \"physically\" non-constant, and \"mutable\" sets an exception for the cached value in a \"const\" scope), but I think it is also okay to remove \"const\" from readingData so someone reading the code would be watchful for any changes to the structure.",
      "parentUuid": "0ca606a3_68af3a3c",
      "range": {
        "startLine": 174,
        "startChar": 4,
        "endLine": 174,
        "endChar": 11
      },
      "revId": "610ed37b883615c23ac3fd2b22a658a5a12bdabc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5e8fec84_db5b20f5",
        "filename": "sensordatahandler.hpp",
        "patchSetId": 3
      },
      "lineNbr": 238,
      "author": {
        "id": 1000099
      },
      "writtenOn": "2019-11-15T01:16:59Z",
      "side": 1,
      "message": "I think in general it\u0027s not preferred to use \"catch (...)\". You should type and name the exception you catch, so you can output some information about it if necessary.",
      "range": {
        "startLine": 238,
        "startChar": 0,
        "endLine": 238,
        "endChar": 15
      },
      "revId": "610ed37b883615c23ac3fd2b22a658a5a12bdabc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "41dc6280_b25c4784",
        "filename": "sensordatahandler.hpp",
        "patchSetId": 3
      },
      "lineNbr": 238,
      "author": {
        "id": 1000500
      },
      "writtenOn": "2019-11-21T19:15:50Z",
      "side": 1,
      "message": "Added a logging statment.",
      "parentUuid": "5e8fec84_db5b20f5",
      "range": {
        "startLine": 238,
        "startChar": 0,
        "endLine": 238,
        "endChar": 15
      },
      "revId": "610ed37b883615c23ac3fd2b22a658a5a12bdabc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f716d5a2_63e0c78d",
        "filename": "sensordatahandler.hpp",
        "patchSetId": 3
      },
      "lineNbr": 244,
      "author": {
        "id": 1000099
      },
      "writtenOn": "2019-11-15T01:16:59Z",
      "side": 1,
      "message": "Hm, I don\u0027t think this is a good idea. We are OK with using goto to do some cleanup and return, in some cases when the cleanup is nontrivial, but this is not a good place to use goto.",
      "range": {
        "startLine": 244,
        "startChar": 0,
        "endLine": 244,
        "endChar": 23
      },
      "revId": "610ed37b883615c23ac3fd2b22a658a5a12bdabc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2a1629d0_2923e280",
        "filename": "sensordatahandler.hpp",
        "patchSetId": 3
      },
      "lineNbr": 244,
      "author": {
        "id": 1000500
      },
      "writtenOn": "2019-11-21T19:15:50Z",
      "side": 1,
      "message": "Switched to a for loop.",
      "parentUuid": "f716d5a2_63e0c78d",
      "range": {
        "startLine": 244,
        "startChar": 0,
        "endLine": 244,
        "endChar": 23
      },
      "revId": "610ed37b883615c23ac3fd2b22a658a5a12bdabc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}