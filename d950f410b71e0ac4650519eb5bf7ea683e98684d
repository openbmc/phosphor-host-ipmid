{
  "comments": [
    {
      "key": {
        "uuid": "505fd855_cf827a3a",
        "filename": "dbus-sdr/storagecommands.cpp",
        "patchSetId": 1
      },
      "lineNbr": 254,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2021-12-08T05:36:33Z",
      "side": 0,
      "message": "I think this is with the assumption that the FRU won\u0027t be touched outside of the ipmi handlers, which is probably not quite true anymore.\n\n\nI think it is better to have the Write function reset `lastDevId` while still keeping this around.\n\nTo support FruWrite from outside of the ipmid, we can add a dbus-signal matcher for this signal\n```\n sdbusplus::message::message writeFru \u003d dbus-\u003enew_method_call(\n        fruDeviceServiceName, \"/xyz/openbmc_project/FruDevice\",\n        \"xyz.openbmc_project.FruDeviceManager\", \"WriteFru\");\n```\n\nAnd also reset the `lastDevId` to 0xFF if it is writing to that FRU. Something like that.",
      "range": {
        "startLine": 251,
        "startChar": 0,
        "endLine": 254,
        "endChar": 5
      },
      "revId": "d950f410b71e0ac4650519eb5bf7ea683e98684d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ad936b77_b48ba6ce",
        "filename": "dbus-sdr/storagecommands.cpp",
        "patchSetId": 1
      },
      "lineNbr": 254,
      "author": {
        "id": 1001198
      },
      "writtenOn": "2021-12-08T08:20:59Z",
      "side": 0,
      "message": "I am afraid that we can not cover all of cases which update FRU data. It is more safety if we always request to read FRU data via dbus method, FRU data will be synchronous.",
      "parentUuid": "505fd855_cf827a3a",
      "range": {
        "startLine": 251,
        "startChar": 0,
        "endLine": 254,
        "endChar": 5
      },
      "revId": "d950f410b71e0ac4650519eb5bf7ea683e98684d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "03de826d_4ea132a9",
        "filename": "dbus-sdr/storagecommands.cpp",
        "patchSetId": 1
      },
      "lineNbr": 254,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2021-12-08T09:08:42Z",
      "side": 0,
      "message": "yeah, if all updates will send a dbus signal then this is fine. However, that is probably not the case.",
      "parentUuid": "ad936b77_b48ba6ce",
      "range": {
        "startLine": 251,
        "startChar": 0,
        "endLine": 254,
        "endChar": 5
      },
      "revId": "d950f410b71e0ac4650519eb5bf7ea683e98684d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cb749be9_b346b42f",
        "filename": "dbus-sdr/storagecommands.cpp",
        "patchSetId": 1
      },
      "lineNbr": 254,
      "author": {
        "id": 1001198
      },
      "writtenOn": "2021-12-10T03:04:52Z",
      "side": 0,
      "message": "Do you agree with me that we should read FRU data via Dbus method even device ID is same as the previous one?",
      "parentUuid": "03de826d_4ea132a9",
      "range": {
        "startLine": 251,
        "startChar": 0,
        "endLine": 254,
        "endChar": 5
      },
      "revId": "d950f410b71e0ac4650519eb5bf7ea683e98684d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f2fb2679_a943d20f",
        "filename": "dbus-sdr/storagecommands.cpp",
        "patchSetId": 1
      },
      "lineNbr": 254,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2021-12-10T04:14:27Z",
      "side": 0,
      "message": "That depends on what our expectation of how we handle the FRU writes. This is done for performance reasons, but I am not sure if there are other reason for caching it.\n\nI am fine either way.",
      "parentUuid": "cb749be9_b346b42f",
      "range": {
        "startLine": 251,
        "startChar": 0,
        "endLine": 254,
        "endChar": 5
      },
      "revId": "d950f410b71e0ac4650519eb5bf7ea683e98684d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2ca94d4b_5825ee49",
        "filename": "dbus-sdr/storagecommands.cpp",
        "patchSetId": 1
      },
      "lineNbr": 254,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-12-22T00:11:28Z",
      "side": 0,
      "message": "\u003e I think this is with the assumption that the FRU won\u0027t be touched outside of the ipmi handlers\n\nThe assumption here is that two things within the system should not be expecting to make partially atomic writes to the FRU.  The FRU API as it exists was intended to be atomic, with the Dbus API is always seeing a valid FRU on the part of a read.\n\nIf there are two things expecting to write the FRU through different channels and get the same result, they need to understand how the atomic caching works and plan on it (ie, any IPMI handlers need to write the FULL fru to trigger the save, and not rely on the timeout).",
      "parentUuid": "f2fb2679_a943d20f",
      "range": {
        "startLine": 251,
        "startChar": 0,
        "endLine": 254,
        "endChar": 5
      },
      "revId": "d950f410b71e0ac4650519eb5bf7ea683e98684d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}