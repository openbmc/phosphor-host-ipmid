{
  "comments": [
    {
      "key": {
        "uuid": "a121cff8_ece82ab9",
        "filename": "chassishandler.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1696,
      "author": {
        "id": 1000163
      },
      "writtenOn": "2021-02-26T23:19:39Z",
      "side": 1,
      "message": "dbus.call() will throw rather than simply return an error via the is_method_error() call. You must have try/catch around the call function or ipmid will abort.",
      "range": {
        "startLine": 1694,
        "startChar": 0,
        "endLine": 1696,
        "endChar": 5
      },
      "revId": "913d3558c886dabae9c1f0e8c984f059383da7c2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "40cd39ef_07c851ff",
        "filename": "chassishandler.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1696,
      "author": {
        "id": 1000926
      },
      "writtenOn": "2021-02-27T12:37:24Z",
      "side": 1,
      "message": "We have try/catch in the ipmiChassisSetSysBootOptions function, that calls this setBootType() function. Would the program abort anyway?\n\nDo you want the code to be something like:\n```\ntry \n{\n    auto reply \u003d dbus.call(method);\n    if (reply.is_method_error())\n    {\n        log\u003clevel::ERR\u003e(\"Error in BootType Set\");\n        report\u003cInternalFailure\u003e();\n        return ipmi::ccUnspecifiedError;\n    }\n}\ncatch (const sdbusplus::exception::SdBusError\u0026 e)\n{\n        log\u003clevel::DEBUG\u003e(\"set-property failed\",\n            entry(\"SERVICE\u003d%s\", objects.service(bootTypeSetting, bootTypeIntf).c_str()),\n            entry(\"OBJPATH\u003d%s\", bootTypeSetting.c_str()),\n            entry(\"INTERFACE\u003d%s\", ipmi::PROP_INTF),\n            entry(\"PROP\u003d%s\", \"BootType\"));\n}\n```\n\nAnyway, I\u0027ve created this `setBootType` method based on the `setBootSource` and `setBootMode` methods. So if this method has a problem, the rest of the methods have it too. Do you want me to fix them in this commit or in a separate one? Maybe it would be better to refactor them all in a separate commit?\n\nOne more thought.\nWouldn\u0027t it be better to use `ipmi::setDbusProperty` and `ipmi::getDbusProperty` in all of the three methods (`setBootType`, `setBootSource`, `setBootMode`) ?\nIt doesn\u0027t have try/catch, so it would be necessary to add it anyway, but it would remove some boilerplate code.",
      "parentUuid": "a121cff8_ece82ab9",
      "range": {
        "startLine": 1694,
        "startChar": 0,
        "endLine": 1696,
        "endChar": 5
      },
      "revId": "913d3558c886dabae9c1f0e8c984f059383da7c2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0f6775d5_bc042779",
        "filename": "chassishandler.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1808,
      "author": {
        "id": 1000163
      },
      "writtenOn": "2021-02-26T23:19:39Z",
      "side": 1,
      "message": "call() and read() will both throw on error, so you must have try/catch around them to avoid an abort.",
      "range": {
        "startLine": 1799,
        "startChar": 0,
        "endLine": 1808,
        "endChar": 31
      },
      "revId": "913d3558c886dabae9c1f0e8c984f059383da7c2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "596bf6cd_7bb62913",
        "filename": "chassishandler.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1808,
      "author": {
        "id": 1000926
      },
      "writtenOn": "2021-02-27T12:37:24Z",
      "side": 1,
      "message": "See the discussion above. I think the situation is the same in here.",
      "parentUuid": "0f6775d5_bc042779",
      "range": {
        "startLine": 1799,
        "startChar": 0,
        "endLine": 1808,
        "endChar": 31
      },
      "revId": "913d3558c886dabae9c1f0e8c984f059383da7c2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e9285862_36016770",
        "filename": "chassishandler.cpp",
        "patchSetId": 1
      },
      "lineNbr": 2023,
      "author": {
        "id": 1000163
      },
      "writtenOn": "2021-02-26T23:19:39Z",
      "side": 1,
      "message": "An error log is already present in the setBootType() function. No need to log an error twice for the same failure.",
      "range": {
        "startLine": 2020,
        "startChar": 17,
        "endLine": 2023,
        "endChar": 57
      },
      "revId": "913d3558c886dabae9c1f0e8c984f059383da7c2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "df6e4224_df353981",
        "filename": "chassishandler.cpp",
        "patchSetId": 1
      },
      "lineNbr": 2023,
      "author": {
        "id": 1000926
      },
      "writtenOn": "2021-02-27T12:37:24Z",
      "side": 1,
      "message": "This is a mistake that comes from the `setBootSource`/`setBootMode` methods.\nDo you want me to fix it here, or in a separate commit?",
      "parentUuid": "e9285862_36016770",
      "range": {
        "startLine": 2020,
        "startChar": 17,
        "endLine": 2023,
        "endChar": 57
      },
      "revId": "913d3558c886dabae9c1f0e8c984f059383da7c2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}