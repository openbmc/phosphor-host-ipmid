{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "68bc1ea3_ed46e786",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1001198
      },
      "writtenOn": "2025-04-10T03:56:16Z",
      "side": 1,
      "message": "Just some minor comments.",
      "revId": "f85514c618f1e2ff810154fa9554a8c0b21130a2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ccf7d09d_e888f4a4",
        "filename": "meson.build",
        "patchSetId": 7
      },
      "lineNbr": 275,
      "author": {
        "id": 1001198
      },
      "writtenOn": "2025-04-10T03:56:16Z",
      "side": 1,
      "message": "Add a MACRO to prevent compiling unused code in the api-type.hpp, utils.hpp ... files",
      "revId": "f85514c618f1e2ff810154fa9554a8c0b21130a2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "eb6b3458_e5119277",
        "filename": "meson.build",
        "patchSetId": 7
      },
      "lineNbr": 275,
      "author": {
        "id": 1002038
      },
      "writtenOn": "2025-04-11T04:28:09Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "ccf7d09d_e888f4a4",
      "revId": "f85514c618f1e2ff810154fa9554a8c0b21130a2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "26f36fa1_1a2fa163",
        "filename": "sbmrhandler.cpp",
        "patchSetId": 7
      },
      "lineNbr": 6,
      "author": {
        "id": 1001198
      },
      "writtenOn": "2025-04-10T03:56:16Z",
      "side": 1,
      "message": "This varilabe should be removed, you can find out the service name via getDbusObject interface instead. Check sbmrBootStateObj/sbmrHostStateService/sbmrHostStateObj also.",
      "range": {
        "startLine": 6,
        "startChar": 15,
        "endLine": 6,
        "endChar": 35
      },
      "revId": "f85514c618f1e2ff810154fa9554a8c0b21130a2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d58148e3_9f88a22e",
        "filename": "sbmrhandler.cpp",
        "patchSetId": 7
      },
      "lineNbr": 6,
      "author": {
        "id": 1002038
      },
      "writtenOn": "2025-04-11T04:28:09Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "26f36fa1_1a2fa163",
      "range": {
        "startLine": 6,
        "startChar": 15,
        "endLine": 6,
        "endChar": 35
      },
      "revId": "f85514c618f1e2ff810154fa9554a8c0b21130a2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6e7e2b03_d50f15de",
        "filename": "sbmrhandler.cpp",
        "patchSetId": 7
      },
      "lineNbr": 29,
      "author": {
        "id": 1001198
      },
      "writtenOn": "2025-04-10T03:56:16Z",
      "side": 1,
      "message": "The result of this function is true/false, I think you should change the return value to bool type instead, please check other functions",
      "range": {
        "startLine": 29,
        "startChar": 0,
        "endLine": 29,
        "endChar": 8
      },
      "revId": "f85514c618f1e2ff810154fa9554a8c0b21130a2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "98dc340d_81e12274",
        "filename": "sbmrhandler.cpp",
        "patchSetId": 7
      },
      "lineNbr": 29,
      "author": {
        "id": 1002038
      },
      "writtenOn": "2025-04-11T04:28:09Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "6e7e2b03_d50f15de",
      "range": {
        "startLine": 29,
        "startChar": 0,
        "endLine": 29,
        "endChar": 8
      },
      "revId": "f85514c618f1e2ff810154fa9554a8c0b21130a2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8e8dbf3c_5bea59ed",
        "filename": "sbmrhandler.cpp",
        "patchSetId": 7
      },
      "lineNbr": 30,
      "author": {
        "id": 1001198
      },
      "writtenOn": "2025-04-10T03:56:16Z",
      "side": 1,
      "message": "The second input parameter should be named \"value\", not \"prop\"",
      "revId": "f85514c618f1e2ff810154fa9554a8c0b21130a2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d8bb5982_86aac7bd",
        "filename": "sbmrhandler.cpp",
        "patchSetId": 7
      },
      "lineNbr": 30,
      "author": {
        "id": 1002038
      },
      "writtenOn": "2025-04-11T04:28:09Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "8e8dbf3c_5bea59ed",
      "revId": "f85514c618f1e2ff810154fa9554a8c0b21130a2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d97b451d_3d8f0525",
        "filename": "sbmrhandler.cpp",
        "patchSetId": 7
      },
      "lineNbr": 66,
      "author": {
        "id": 1001198
      },
      "writtenOn": "2025-04-10T03:56:16Z",
      "side": 1,
      "message": "The format of Boot Progress Code is:\n- 4 bytes EFI_STATUS_CODE_TYPE\n  + 1 Byte STATUS_CODE_TYPE\n  + 2 Bytes STATUS_CODE_RESERVED\n  + 1 Byte STATUS_CODE_SEVERITY (It seems that DEN0069E_SBMR_2.1 is wrong when talk this field is 2bytes)\n- 4 Bytes EFI_STATUS_CODE_VALUE\n  + 2 bytes EFI_STATUS_CODE_OPERATION\n  + 1 byte EFI_STATUS_CODE_SUBCLASS\n  + 1 byte EFI_STATUS_CODE_CLASS\n- 1 Byte Instance\n\nyou should split 9 bytes of data into smaller input parameters (maybe 7 input parameters) as I mentiond above. E.g: https://github.com/openbmc/phosphor-host-ipmid/blob/master/dcmihandler.cpp#L399",
      "revId": "f85514c618f1e2ff810154fa9554a8c0b21130a2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "14c8b04e_8e3541fb",
        "filename": "sbmrhandler.cpp",
        "patchSetId": 7
      },
      "lineNbr": 66,
      "author": {
        "id": 1002038
      },
      "writtenOn": "2025-04-11T04:28:09Z",
      "side": 1,
      "message": "This is simply intended to verify the boot progress code in a single step and update BootStateObject below.",
      "parentUuid": "d97b451d_3d8f0525",
      "revId": "f85514c618f1e2ff810154fa9554a8c0b21130a2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "693a76c7_7f41c3f7",
        "filename": "sbmrhandler.cpp",
        "patchSetId": 7
      },
      "lineNbr": 66,
      "author": {
        "id": 1001198
      },
      "writtenOn": "2025-04-11T05:38:43Z",
      "side": 1,
      "message": "IMO, it makes reviewer difficult to understand all cases of the `data`. If you split `data` into 7 parameters, it is easy to understand the purpose of each parameter.",
      "parentUuid": "14c8b04e_8e3541fb",
      "revId": "f85514c618f1e2ff810154fa9554a8c0b21130a2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a01bbe6e_30a2ff43",
        "filename": "sbmrhandler.cpp",
        "patchSetId": 7
      },
      "lineNbr": 91,
      "author": {
        "id": 1001198
      },
      "writtenOn": "2025-04-10T03:56:16Z",
      "side": 1,
      "message": "You should check each EFI_STATUS_CODE_TYPE/EFI_STATUS_CODE_VALUE/Instance data instead all of data at same time. I think you can remove sbmrBootProgressStages",
      "revId": "f85514c618f1e2ff810154fa9554a8c0b21130a2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "891555d9_a793ae81",
        "filename": "sbmrhandler.cpp",
        "patchSetId": 7
      },
      "lineNbr": 91,
      "author": {
        "id": 1002038
      },
      "writtenOn": "2025-04-11T04:28:09Z",
      "side": 1,
      "message": "Do you see any potential issues with checking all the data at once? It will be simplify for code maintenance and readability.",
      "parentUuid": "a01bbe6e_30a2ff43",
      "revId": "f85514c618f1e2ff810154fa9554a8c0b21130a2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d996e00f_df2b5182",
        "filename": "sbmrhandler.cpp",
        "patchSetId": 7
      },
      "lineNbr": 91,
      "author": {
        "id": 1001198
      },
      "writtenOn": "2025-04-11T05:38:43Z",
      "side": 1,
      "message": "I don\u0027t think your code is simple for code maintenance. When I see to the `sbmrBootProgressStages`, I don\u0027t know where are those key come from. If you split the `data` into 7 input parameters, I believe that it is easy for reviewer to understand why do you map `BootProgressCode` to the `BootProgressStage`",
      "parentUuid": "891555d9_a793ae81",
      "revId": "f85514c618f1e2ff810154fa9554a8c0b21130a2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "90bca9ec_3148a3d6",
        "filename": "sbmrhandler.cpp",
        "patchSetId": 7
      },
      "lineNbr": 104,
      "author": {
        "id": 1001198
      },
      "writtenOn": "2025-04-10T03:56:16Z",
      "side": 1,
      "message": "please split the return values into 7 parameters",
      "range": {
        "startLine": 104,
        "startChar": 14,
        "endLine": 104,
        "endChar": 34
      },
      "revId": "f85514c618f1e2ff810154fa9554a8c0b21130a2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2be5a816_7a73dc51",
        "filename": "sbmrhandler.cpp",
        "patchSetId": 7
      },
      "lineNbr": 104,
      "author": {
        "id": 1002038
      },
      "writtenOn": "2025-04-11T04:28:09Z",
      "side": 1,
      "message": "May I know the reason for splitting the return values? Since we don\u0027t parse the BootProgress code.",
      "parentUuid": "90bca9ec_3148a3d6",
      "range": {
        "startLine": 104,
        "startChar": 14,
        "endLine": 104,
        "endChar": 34
      },
      "revId": "f85514c618f1e2ff810154fa9554a8c0b21130a2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7015ffab_0f48e2d2",
        "filename": "sbmrhandler.cpp",
        "patchSetId": 7
      },
      "lineNbr": 104,
      "author": {
        "id": 1001198
      },
      "writtenOn": "2025-04-11T05:38:43Z",
      "side": 1,
      "message": "I just want all of the code follow a coding style.",
      "parentUuid": "2be5a816_7a73dc51",
      "range": {
        "startLine": 104,
        "startChar": 14,
        "endLine": 104,
        "endChar": 34
      },
      "revId": "f85514c618f1e2ff810154fa9554a8c0b21130a2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "25a9f58c_d023a9ea",
        "filename": "sbmrhandler.cpp",
        "patchSetId": 7
      },
      "lineNbr": 180,
      "author": {
        "id": 1001198
      },
      "writtenOn": "2025-04-10T03:56:16Z",
      "side": 1,
      "message": "Why do you need this code?",
      "revId": "f85514c618f1e2ff810154fa9554a8c0b21130a2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "288859d0_4dd71aa2",
        "filename": "sbmrhandler.cpp",
        "patchSetId": 7
      },
      "lineNbr": 180,
      "author": {
        "id": 1002038
      },
      "writtenOn": "2025-04-11T04:28:09Z",
      "side": 1,
      "message": "This change prevents remote users accidentally updating the boot progress, ensuring that only the BIOS can modify the boot progress code. And the restriction suggests to move to filter function.",
      "parentUuid": "25a9f58c_d023a9ea",
      "revId": "f85514c618f1e2ff810154fa9554a8c0b21130a2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1a0238ba_8bbe2a7f",
        "filename": "sbmrhandler.cpp",
        "patchSetId": 7
      },
      "lineNbr": 180,
      "author": {
        "id": 1001198
      },
      "writtenOn": "2025-04-11T05:38:43Z",
      "side": 1,
      "message": "Do you have any comment for this preventing @hieuh@os.amperecomputing.com?",
      "parentUuid": "288859d0_4dd71aa2",
      "revId": "f85514c618f1e2ff810154fa9554a8c0b21130a2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a3a91390_b4a6c42a",
        "filename": "sbmrhandler.cpp",
        "patchSetId": 7
      },
      "lineNbr": 180,
      "author": {
        "id": 1000992
      },
      "writtenOn": "2025-04-11T07:19:28Z",
      "side": 1,
      "message": "This is used for support only in the SSIF interface. The implementation is right.",
      "parentUuid": "1a0238ba_8bbe2a7f",
      "revId": "f85514c618f1e2ff810154fa9554a8c0b21130a2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}