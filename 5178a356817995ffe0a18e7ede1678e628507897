{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "017cd81e_d6966ad1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1001504
      },
      "writtenOn": "2024-02-21T00:34:06Z",
      "side": 1,
      "message": "The matcher in `dbus-sdr/sensorcommands.cpp` may not take effect on some platform.  Let me do more testing and get it back to you.",
      "revId": "5178a356817995ffe0a18e7ede1678e628507897",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7ef54885_0785a8db",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1001504
      },
      "writtenOn": "2024-02-21T01:17:18Z",
      "side": 1,
      "message": "It seems that the `sensorTree` in https://github.com/openbmc/phosphor-host-ipmid/blob/f027bf0334b91de5c829d21082dd42b75b45a405/include/dbus-sdr/sensorcommands.hpp#L122-L126 is a different copy with the `sensorTreePtr` in https://github.com/openbmc/phosphor-host-ipmid/blob/f027bf0334b91de5c829d21082dd42b75b45a405/dbus-sdr/sdrutils.cpp#L60.\n\nWe may need more investigating how to remove the duplicate.",
      "parentUuid": "017cd81e_d6966ad1",
      "revId": "5178a356817995ffe0a18e7ede1678e628507897",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7773eb53_3e6117df",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2024-02-21T02:05:50Z",
      "side": 1,
      "message": "they are actually the same. It is populated via `getSensorSubtree` in https://github.com/openbmc/phosphor-host-ipmid/blob/f027bf0334b91de5c829d21082dd42b75b45a405/include/dbus-sdr/sensorcommands.hpp#L133-L134C10\n\nI don\u0027t think we `getSensorTree` since it is just confusing at this point. I can try to clean it up.",
      "parentUuid": "7ef54885_0785a8db",
      "revId": "5178a356817995ffe0a18e7ede1678e628507897",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "496b0531_a6ab01fe",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1001504
      },
      "writtenOn": "2024-02-21T02:51:37Z",
      "side": 1,
      "message": "There does exits two copies(versions) of sensor tree:\n1) `SensorSubTree\u0026 getSensorTree()` provides a `storage location` for sensor tree. 2) `uint16_t getSensorSubtree(std::shared_ptr\u003cSensorSubTree\u003e\u0026 subtree)` creates another sensor tree at `sensorTreePtr \u003d std::make_shared\u003cSensorSubTree\u003e();`.\n3) The shared_ptr version will be assigned (by value) to `static SensorSubTree sensorTree` when `bool getSensorSubtree(SensorSubTree\u0026 subtree)` is called.\n\nI feel like if we remove the matcher in `sdrutils.cpp`, `sensorTreePtr` won\u0027t be reset. So we will always get old copy of shared_ptr version?",
      "parentUuid": "7773eb53_3e6117df",
      "revId": "5178a356817995ffe0a18e7ede1678e628507897",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "47cd26c5_58a6665c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2024-02-21T03:54:54Z",
      "side": 1,
      "message": "I am trying some cleanup in https://gerrit.openbmc.org/c/openbmc/phosphor-host-ipmid/+/69520\n\nAnd yeah, I think we need to keep the one in `sdrutils.cpp`, but maybe not the one in `sensorcommand.cpp`.",
      "parentUuid": "496b0531_a6ab01fe",
      "revId": "5178a356817995ffe0a18e7ede1678e628507897",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}