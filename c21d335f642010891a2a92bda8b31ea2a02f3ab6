{
  "comments": [
    {
      "key": {
        "uuid": "3b606193_77e8afb7",
        "filename": "user_channel/channel_mgmt.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1025,
      "author": {
        "id": 1000163
      },
      "writtenOn": "2021-07-14T18:10:50Z",
      "side": 1,
      "message": "while you are making changes, chNum \u003c 0 is always false because it is an unsigned compare. You can remove that as well.",
      "range": {
        "startLine": 1025,
        "startChar": 16,
        "endLine": 1025,
        "endChar": 57
      },
      "revId": "c21d335f642010891a2a92bda8b31ea2a02f3ab6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d1bbd889_1951a3eb",
        "filename": "user_channel/channel_mgmt.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1025,
      "author": {
        "id": 1001116
      },
      "writtenOn": "2021-07-15T09:29:46Z",
      "side": 1,
      "message": "Hi Vernon,\n\nYes, but one doubt what if user tried to send negative numbers then we should throw error message right. In above code, return value from stoi is assigned to unsigned int8 type. Hence chNum will never have negative(-ve) value. Even if we pass -ve value to stoi, it will be always converted to positive and assign it to chNum which is wrong. \nBut we should throw error when user try to give negative channel numbers.  To handle this, we should declare chNum as type int8_t like below\n\n           int8_t chNumber \u003d std::stoi(chKey, nullptr, 10);\n            if ((chNumber \u003c 0) || (chNumber \u003e maxIpmiChannels))\n            {\n                log\u003clevel::DEBUG\u003e(\n                    \"Invalid channel access entry in config file\");\n                throw std::out_of_range(\"Out of range - channel number\");\n            }\n            uint8_t chNum \u003d static_cast\u003cuint8_t\u003e(chNumber);\n\nPlease correct me if any thing wrong here and I have made above changes as part of Klocwork reported issue and planning to push for review.\n\nThanks\nMeera",
      "parentUuid": "3b606193_77e8afb7",
      "range": {
        "startLine": 1025,
        "startChar": 16,
        "endLine": 1025,
        "endChar": 57
      },
      "revId": "c21d335f642010891a2a92bda8b31ea2a02f3ab6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "19678cca_9258a90e",
        "filename": "user_channel/channel_mgmt.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1025,
      "author": {
        "id": 1000418
      },
      "writtenOn": "2021-07-15T11:06:05Z",
      "side": 1,
      "message": "Hi Meera,\nEven with this new change, you will end up in throwing same \"Out of range - channel number\u0027 error message only.\nAs per spec, We define channel number values (0 to 15) as unsigned integer and negative numbers also handled automatically as they go out of range.\nSo, please implement the change as Vernon proposed.\n\nThanks,\nSaravanan",
      "parentUuid": "d1bbd889_1951a3eb",
      "range": {
        "startLine": 1025,
        "startChar": 16,
        "endLine": 1025,
        "endChar": 57
      },
      "revId": "c21d335f642010891a2a92bda8b31ea2a02f3ab6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "400b7e14_43a21b32",
        "filename": "user_channel/channel_mgmt.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1025,
      "author": {
        "id": 1000163
      },
      "writtenOn": "2021-07-15T20:13:21Z",
      "side": 1,
      "message": "Meera,\nYour proposed solution would be fine, but to be completely pedantic, chNumber should be an int so it does not get implicitly truncated when returned from stoi. after checking bounds, it is safe to cast to a uint8_t.",
      "parentUuid": "19678cca_9258a90e",
      "range": {
        "startLine": 1025,
        "startChar": 16,
        "endLine": 1025,
        "endChar": 57
      },
      "revId": "c21d335f642010891a2a92bda8b31ea2a02f3ab6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f007fb08_67c72704",
        "filename": "user_channel/channel_mgmt.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1025,
      "author": {
        "id": 1001116
      },
      "writtenOn": "2021-07-16T07:50:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "400b7e14_43a21b32",
      "range": {
        "startLine": 1025,
        "startChar": 16,
        "endLine": 1025,
        "endChar": 57
      },
      "revId": "c21d335f642010891a2a92bda8b31ea2a02f3ab6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "df2b725b_e14141ed",
        "filename": "user_channel/channel_mgmt.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1093,
      "author": {
        "id": 1000163
      },
      "writtenOn": "2021-07-14T18:10:50Z",
      "side": 1,
      "message": "same as above",
      "revId": "c21d335f642010891a2a92bda8b31ea2a02f3ab6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}