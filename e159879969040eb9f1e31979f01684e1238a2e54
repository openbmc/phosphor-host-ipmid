{
  "comments": [
    {
      "key": {
        "uuid": "447c5226_30270e0b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 12,
      "author": {
        "id": 1000168
      },
      "writtenOn": "2019-07-26T08:27:26Z",
      "side": 1,
      "message": "1. We don\u0027t need whitelist configuration mechanism for session channels, as session channels already provide a mechanism to control the same using user privilege and privilege of the commands.\nLet me know if you find any reason why this whitelist configuration must exist for session based channel.\n\n2. For session-less channels, currently we want to have this filtering mechanism to host interface alone, as other we assume it is trusted. So, question here is why we need this restriction on that interface?\n\nBasically, trying to understand why it is require? or in which scenario we are trying to address here?",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 12,
        "endChar": 6
      },
      "revId": "e159879969040eb9f1e31979f01684e1238a2e54",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5ba7d9b5_17826c0b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 12,
      "author": {
        "id": 1000317
      },
      "writtenOn": "2019-07-26T09:21:08Z",
      "side": 1,
      "message": "In some cases, vendors need to mask access to certain commands for certain channels, just as commands does not exist, not just the user privilege, and the whitelisting mechanism works well.",
      "parentUuid": "447c5226_30270e0b",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 12,
        "endChar": 6
      },
      "revId": "e159879969040eb9f1e31979f01684e1238a2e54",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0a947f81_e12c5903",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 12,
      "author": {
        "id": 1000168
      },
      "writtenOn": "2019-07-26T13:54:44Z",
      "side": 1,
      "message": "Can you please elaborate the case here (trying to understand the scenarios here, which will not be covered by the existing 2 cases).\n1. We have user based privilege restriction\n2. We have channel based privilege restriction\ni.e. we will be able to tell on channel 1 (say eth0), execute only operator privilege commands only even though the user is admin privilege user.\n\nTrying to understand the redefinition of these whitelist commands filtering here, which can\u0027t be covered in existing one (which is again not specification complaint here).",
      "parentUuid": "5ba7d9b5_17826c0b",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 12,
        "endChar": 6
      },
      "revId": "e159879969040eb9f1e31979f01684e1238a2e54",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa4800f6_77dab083",
        "filename": "generate_whitelist.sh",
        "patchSetId": 4
      },
      "lineNbr": 27,
      "author": {
        "id": 1000163
      },
      "writtenOn": "2019-07-29T16:07:20Z",
      "side": 1,
      "message": "0? NULL is usually used for pointers, this field is an unsigned short.",
      "range": {
        "startLine": 27,
        "startChar": 58,
        "endLine": 27,
        "endChar": 62
      },
      "revId": "e159879969040eb9f1e31979f01684e1238a2e54",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "086974cf_c42dcf64",
        "filename": "generate_whitelist.sh",
        "patchSetId": 4
      },
      "lineNbr": 27,
      "author": {
        "id": 1000317
      },
      "writtenOn": "2019-07-30T07:11:36Z",
      "side": 1,
      "message": "Yes, NULL was used to distinguish between two or three elements in development, but it could cause confusion in data types, so I had changed NULL to 0x0000 in Patchset 5.",
      "parentUuid": "fa4800f6_77dab083",
      "range": {
        "startLine": 27,
        "startChar": 58,
        "endLine": 27,
        "endChar": 62
      },
      "revId": "e159879969040eb9f1e31979f01684e1238a2e54",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0c775b94_fd6a24c3",
        "filename": "ipmiwhitelist.hpp",
        "patchSetId": 4
      },
      "lineNbr": 4,
      "author": {
        "id": 1000163
      },
      "writtenOn": "2019-07-29T16:07:20Z",
      "side": 1,
      "message": "this can be removed; it is where std::pair is defined",
      "range": {
        "startLine": 4,
        "startChar": 10,
        "endLine": 4,
        "endChar": 17
      },
      "revId": "e159879969040eb9f1e31979f01684e1238a2e54",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "126cd431_06e56913",
        "filename": "ipmiwhitelist.hpp",
        "patchSetId": 4
      },
      "lineNbr": 4,
      "author": {
        "id": 1000317
      },
      "writtenOn": "2019-07-30T07:11:36Z",
      "side": 1,
      "message": "Done.",
      "parentUuid": "0c775b94_fd6a24c3",
      "range": {
        "startLine": 4,
        "startChar": 10,
        "endLine": 4,
        "endChar": 17
      },
      "revId": "e159879969040eb9f1e31979f01684e1238a2e54",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a02d3580_7b85addf",
        "filename": "whitelist-filter.cpp",
        "patchSetId": 4
      },
      "lineNbr": 200,
      "author": {
        "id": 1000168
      },
      "writtenOn": "2019-07-26T08:27:26Z",
      "side": 1,
      "message": "Have  you checked the time delay which got introduced because of this? Basically all commands are going to go through this one, irrespective of what channel it comes from. Earlier loop was running only for system interface channel and not for anything else, now all commands are forced to do this. \nReason: If we want to implement for all the channel, then probably we need to see how we can embed the same under the command handler structure itself, so that there itself we can check the mask \u0026 apply it, rather than doing separate search here. \nBut before that, need to understand the reason for implementing this in all channels",
      "range": {
        "startLine": 162,
        "startChar": 6,
        "endLine": 200,
        "endChar": 9
      },
      "revId": "e159879969040eb9f1e31979f01684e1238a2e54",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    }
  ]
}