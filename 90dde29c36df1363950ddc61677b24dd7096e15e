{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "0fbd4311_01fa420e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1002307
      },
      "writtenOn": "2025-05-30T12:17:11Z",
      "side": 1,
      "message": "Thanks for this infra. \nBased on this I was able to develop oem/nvidia.",
      "revId": "90dde29c36df1363950ddc61677b24dd7096e15e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b2beed13_775c8fd6",
        "filename": "meson.options",
        "patchSetId": 1
      },
      "lineNbr": 278,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2025-05-27T18:56:41Z",
      "side": 1,
      "message": "How do we ensure they all get compiled in CI?  Do you want them as a list like this or do you want them as individual features?\n\nI guess it looks like `libpldm` made it an array where all of them are included by default in the `value`.\n\nhttps://github.com/openbmc/libpldm/blob/ffdc405cd8517f4c090f78e0f7692a877b0c75b6/meson.options#L17\n\npldm did it as separate meson.options:\n\nhttps://github.com/openbmc/pldm/blob/master/meson.options#L158",
      "revId": "90dde29c36df1363950ddc61677b24dd7096e15e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1529b3a8_1b92e6d4",
        "filename": "meson.options",
        "patchSetId": 1
      },
      "lineNbr": 278,
      "author": {
        "id": 1000163
      },
      "writtenOn": "2025-06-03T20:47:49Z",
      "side": 1,
      "message": "After I pushed this and had the discussion on discord, I was thinking I might add two more options to the list of choices: \u0027none\u0027, and \u0027all\u0027, with the default value set to \u0027all\u0027",
      "parentUuid": "b2beed13_775c8fd6",
      "revId": "90dde29c36df1363950ddc61677b24dd7096e15e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "05ba8604_f041bb4d",
        "filename": "meson.options",
        "patchSetId": 1
      },
      "lineNbr": 278,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2025-06-03T20:56:23Z",
      "side": 1,
      "message": "üëç",
      "parentUuid": "1529b3a8_1b92e6d4",
      "revId": "90dde29c36df1363950ddc61677b24dd7096e15e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "624b8946_ca084338",
        "filename": "oem/example/meson.build",
        "patchSetId": 1
      },
      "lineNbr": 25,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2025-05-27T18:56:41Z",
      "side": 1,
      "message": "You might want this as a variable elsewhere.",
      "revId": "90dde29c36df1363950ddc61677b24dd7096e15e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "551172a7_789e4ce3",
        "filename": "oem/example/meson.build",
        "patchSetId": 1
      },
      "lineNbr": 25,
      "author": {
        "id": 1000163
      },
      "writtenOn": "2025-06-03T20:47:49Z",
      "side": 1,
      "message": "If I recall correctly, the providers libraries need this. I should probably dig into why.",
      "parentUuid": "624b8946_ca084338",
      "revId": "90dde29c36df1363950ddc61677b24dd7096e15e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9e662143_16805705",
        "filename": "oem/example/meson.build",
        "patchSetId": 1
      },
      "lineNbr": 25,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2025-06-03T20:56:23Z",
      "side": 1,
      "message": "Yeah, all I meant was do something like `override_options: ipmi_plugin_options,` so we don\u0027t have these weird `ld` flags sprinkled everywhere but it is somewhat self-documenting.\n\nI think the `b_lundef` is to allow the library to link against symbols that don\u0027t exist, because `main` provides them.  That\u0027s how you have to link plugins.",
      "parentUuid": "551172a7_789e4ce3",
      "revId": "90dde29c36df1363950ddc61677b24dd7096e15e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}