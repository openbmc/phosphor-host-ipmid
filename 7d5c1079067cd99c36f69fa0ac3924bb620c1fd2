{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "73d56c4d_989f1f07",
        "filename": "meson.build",
        "patchSetId": 3
      },
      "lineNbr": 110,
      "author": {
        "id": 1000163
      },
      "writtenOn": "2023-07-29T00:02:18Z",
      "side": 1,
      "message": "This is going to require a recipe change for phosphor-ipmi-host",
      "revId": "7d5c1079067cd99c36f69fa0ac3924bb620c1fd2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8f3a66e7_c8aabb87",
        "filename": "transporthandler.cpp",
        "patchSetId": 3
      },
      "lineNbr": 666,
      "author": {
        "id": 1000163
      },
      "writtenOn": "2023-07-29T00:02:18Z",
      "side": 1,
      "message": "This is one of those \"don\u0027t be evil\" situations. Trivially copyable structures might be valid to simply copy from the payload, but only if they don\u0027t contain bitfields or multi-byte structures. In this case, you are copying over mac and ethernet addresses, which are not \u0027endian\u0027 byte structures, so it works fine.\n\nI am fine with this in this case, but keep in mind that you are opening up a bit of a loophole that could be abused for non-conforming payloads. The only saving grace is that the scope is limited (at the moment) to transporthandler.cpp.",
      "revId": "7d5c1079067cd99c36f69fa0ac3924bb620c1fd2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}