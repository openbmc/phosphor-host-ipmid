{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "1c640c3e_5c4f9ce2",
        "filename": "dbus-sdr/storagecommands.cpp",
        "patchSetId": 1
      },
      "lineNbr": 606,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2025-04-07T02:18:44Z",
      "side": 1,
      "message": "Please use ipmi::callDbusMethod in utils.hpp\n```\nusing Paths \u003d std::vector\u003cstd::string\u003e;\n    boost::system::error_code ec;\n    Paths paths \u003d ipmi::callDbusMethod\u003cPaths\u003e(\n        *ctx, ec, \"xyz.openbmc_project.ObjectMapper\",\n        \"/xyz/openbmc_project/object_mapper\",\n        \"xyz.openbmc_project.ObjectMapper\", \"GetSubTreePaths\",  \n        \"xyz/openbmc_project/inventory\", 0,\n        std::array\u003cconst char*, 2\u003e{\n            \"xyz.openbmc_project.Inventory.Decorator.I2CDevice\",\n            \"xyz.openbmc_project.Inventory.Decorator.Ipmi\"});\n```",
      "range": {
        "startLine": 597,
        "startChar": 0,
        "endLine": 606,
        "endChar": 65
      },
      "revId": "f5295ee2622430bc71d897ed0094d13d69c14d77",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d49896cd_4fb307d0",
        "filename": "dbus-sdr/storagecommands.cpp",
        "patchSetId": 1
      },
      "lineNbr": 617,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2025-04-07T02:18:44Z",
      "side": 1,
      "message": "Can we use `for (const auto\u0026 path : paths)` instead of `std::find_if`?",
      "range": {
        "startLine": 617,
        "startChar": 17,
        "endLine": 617,
        "endChar": 30
      },
      "revId": "f5295ee2622430bc71d897ed0094d13d69c14d77",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "62ec4193_70cd7455",
        "filename": "dbus-sdr/storagecommands.cpp",
        "patchSetId": 1
      },
      "lineNbr": 626,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2025-04-07T02:18:44Z",
      "side": 1,
      "message": "As above:\n```\nboost::system::error_code getAllDbusProperties(\n    Context::ptr ctx, const std::string\u0026 service, const std::string\u0026 objPath,\n    const std::string\u0026 interface, PropertyMap\u0026 properties);\n```",
      "range": {
        "startLine": 619,
        "startChar": 8,
        "endLine": 626,
        "endChar": 73
      },
      "revId": "f5295ee2622430bc71d897ed0094d13d69c14d77",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7e8acba9_94f7e85f",
        "filename": "dbus-sdr/storagecommands.cpp",
        "patchSetId": 1
      },
      "lineNbr": 658,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2025-04-07T02:18:44Z",
      "side": 1,
      "message": "```\nif (!maybeBus || *maybeBus !\u003d bus || !maybeAddress || *maybeAddress !\u003d address)\n{\n    return false;\n}\n```",
      "range": {
        "startLine": 651,
        "startChar": 11,
        "endLine": 658,
        "endChar": 13
      },
      "revId": "f5295ee2622430bc71d897ed0094d13d69c14d77",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "95f4efda_e326764a",
        "filename": "dbus-sdr/storagecommands.cpp",
        "patchSetId": 1
      },
      "lineNbr": 669,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2025-04-07T02:18:44Z",
      "side": 1,
      "message": "As above",
      "range": {
        "startLine": 665,
        "startChar": 10,
        "endLine": 669,
        "endChar": 68
      },
      "revId": "f5295ee2622430bc71d897ed0094d13d69c14d77",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}