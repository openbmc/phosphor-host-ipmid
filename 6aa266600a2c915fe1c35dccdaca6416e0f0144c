{
  "comments": [
    {
      "key": {
        "uuid": "e7e7524b_3445eb0e",
        "filename": "include/dbus-sdr/sensorcommands.hpp",
        "patchSetId": 12
      },
      "lineNbr": 155,
      "author": {
        "id": 1000163
      },
      "writtenOn": "2021-07-14T20:40:53Z",
      "side": 1,
      "message": "is this safe? I am not sure if this is doing a deep copy or what. Either way, it is a copy, which could be avoided with a move, if the loop var is not const auto\u0026.",
      "range": {
        "startLine": 155,
        "startChar": 0,
        "endLine": 155,
        "endChar": 60
      },
      "revId": "6aa266600a2c915fe1c35dccdaca6416e0f0144c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "77d52c61_9b30889e",
        "filename": "include/dbus-sdr/sensorcommands.hpp",
        "patchSetId": 12
      },
      "lineNbr": 155,
      "author": {
        "id": 1000857
      },
      "writtenOn": "2021-07-14T22:26:47Z",
      "side": 1,
      "message": "We are extracting a slice of information out of sensorTree. This deep copy is safe, I think, but we cannot operate a move. \n\nSince the interface vector is an optional output, we can use `vector\u003cstring\u003e const **` pointing to sensorTree in order to get rid of the extra copying, if the extra copy really matters. Life time is not an issue because sensorTree is static.",
      "parentUuid": "e7e7524b_3445eb0e",
      "range": {
        "startLine": 155,
        "startChar": 0,
        "endLine": 155,
        "endChar": 60
      },
      "revId": "6aa266600a2c915fe1c35dccdaca6416e0f0144c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}