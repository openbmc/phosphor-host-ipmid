{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "6ecd6793_bcd1c251",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000163
      },
      "writtenOn": "2023-11-03T17:02:18Z",
      "side": 1,
      "message": "If I understand correctly, strlen can be implemented as a builtin that gets executed at compile time for const char inputs. It\u0027s not technically a constexpr because it is a C function, but I think it can be safely used in constexpr functions because it can be calculated at compile time.",
      "revId": "5ec40f37d8b2a0bc703b0c95d00d2bae692b39af",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8b81fa37_6b5a9ad0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1001059
      },
      "writtenOn": "2023-11-03T18:04:34Z",
      "side": 1,
      "message": "That\u0027s not what i\u0027m seeing with newer clang:\nthird_party/openbmc_phosphor_host_ipmid/user_channel/channel_mgmt.cpp:184:22: error: constexpr variable \u0027length\u0027 must be initialized by a constant expression\n  184 |     constexpr size_t length \u003d strlen(networkIntfObjectBasePath);\n      |                      ^        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nthird_party/openbmc_phosphor_host_ipmid/user_channel/channel_mgmt.cpp:184:31: note: non-constexpr function \u0027strlen\u0027 cannot be used in a constant expression\n  184 |     constexpr size_t length \u003d strlen(networkIntfObjectBasePath);",
      "parentUuid": "6ecd6793_bcd1c251",
      "revId": "5ec40f37d8b2a0bc703b0c95d00d2bae692b39af",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}